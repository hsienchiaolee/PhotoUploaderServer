// This file was generated by counterfeiter
package domainfakes

import (
	"sync"

	"github.com/hsienchiaolee/PhotoUploaderServer/domain"
)

type FakeOperatingSystem struct {
	CreateStub        func(name string) (domain.File, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		name string
	}
	createReturns struct {
		result1 domain.File
		result2 error
	}
	invocations map[string][][]interface{}
}

func (fake *FakeOperatingSystem) Create(name string) (domain.File, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		name string
	}{name})
	fake.guard("Create")
	fake.invocations["Create"] = append(fake.invocations["Create"], []interface{}{name})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(name)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2
	}
}

func (fake *FakeOperatingSystem) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *FakeOperatingSystem) CreateArgsForCall(i int) string {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].name
}

func (fake *FakeOperatingSystem) CreateReturns(result1 domain.File, result2 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 domain.File
		result2 error
	}{result1, result2}
}

func (fake *FakeOperatingSystem) Invocations() map[string][][]interface{} {
	return fake.invocations
}

func (fake *FakeOperatingSystem) guard(key string) {
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
}

var _ domain.OperatingSystem = new(FakeOperatingSystem)
